/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package supranational.blst;

public class PT {
  private transient long[] swigCPtr;

  protected PT(long[] cPtr) { swigCPtr = cPtr; }

  protected static long[] getCPtr(PT obj) {
    return obj != null ? obj.swigCPtr : null;
  }

  public PT dup() { return new PT(swigCPtr.clone()); }

  public PT(P1_Affine p) { this(blstJNI.new_PT__SWIG_0(P1_Affine.getCPtr(p))); }

  public PT(P2_Affine q) { this(blstJNI.new_PT__SWIG_1(P2_Affine.getCPtr(q))); }

  public PT(P2_Affine q, P1_Affine p) { this(blstJNI.new_PT__SWIG_2(P2_Affine.getCPtr(q), P1_Affine.getCPtr(p))); }

  public PT(P1_Affine p, P2_Affine q) { this(blstJNI.new_PT__SWIG_3(P1_Affine.getCPtr(p), P2_Affine.getCPtr(q))); }

  public PT(P2 q, P1 p) { this(blstJNI.new_PT__SWIG_4(P2.getCPtr(q), P1.getCPtr(p))); }

  public PT(P1 p, P2 q) { this(blstJNI.new_PT__SWIG_5(P1.getCPtr(p), P2.getCPtr(q))); }

  public boolean is_one() {
    return blstJNI.PT_is_one(swigCPtr);
  }

  public boolean is_equal(PT p) {
    return blstJNI.PT_is_equal(swigCPtr, PT.getCPtr(p));
  }

  public PT sqr() { blstJNI.PT_sqr(swigCPtr); return this; }

  public PT mul(PT p) { blstJNI.PT_mul(swigCPtr, PT.getCPtr(p)); return this; }

  public PT final_exp() { blstJNI.PT_final_exp(swigCPtr); return this; }

  public boolean in_group() {
    return blstJNI.PT_in_group(swigCPtr);
  }

  public byte[] to_bendian() { return blstJNI.PT_to_bendian(swigCPtr); }

  public static boolean finalverify(PT gt1, PT gt2) {
    return blstJNI.PT_finalverify(PT.getCPtr(gt1), PT.getCPtr(gt2));
  }

  public static PT one() {
    return new PT(blstJNI.PT_one());
}

}
