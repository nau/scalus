/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package supranational.blst;

public class SecretKey {
  private transient long[] swigCPtr;

  protected SecretKey(long[] cPtr) { swigCPtr = cPtr; }

  protected static long[] getCPtr(SecretKey obj) {
    return obj != null ? obj.swigCPtr : null;
  }

  public SecretKey dup() { return new SecretKey(swigCPtr.clone()); }

  public void keygen(byte[] IKM, String info) {
    blstJNI.SecretKey_keygen__SWIG_0(swigCPtr, IKM, info);
  }

  public void keygen(byte[] IKM) {
    blstJNI.SecretKey_keygen__SWIG_1(swigCPtr, IKM);
  }

  public void keygen_v3(byte[] IKM, String info) {
    blstJNI.SecretKey_keygen_v3__SWIG_0(swigCPtr, IKM, info);
  }

  public void keygen_v3(byte[] IKM) {
    blstJNI.SecretKey_keygen_v3__SWIG_1(swigCPtr, IKM);
  }

  public void keygen_v4_5(byte[] IKM, byte[] salt, long salt_len, String info) {
    blstJNI.SecretKey_keygen_v4_5__SWIG_0(swigCPtr, IKM, salt, salt_len, info);
  }

  public void keygen_v4_5(byte[] IKM, byte[] salt, long salt_len) {
    blstJNI.SecretKey_keygen_v4_5__SWIG_1(swigCPtr, IKM, salt, salt_len);
  }

  public void keygen_v5(byte[] IKM, byte[] salt, long salt_len, String info) {
    blstJNI.SecretKey_keygen_v5__SWIG_0(swigCPtr, IKM, salt, salt_len, info);
  }

  public void keygen_v5(byte[] IKM, byte[] salt, long salt_len) {
    blstJNI.SecretKey_keygen_v5__SWIG_1(swigCPtr, IKM, salt, salt_len);
  }

  public void derive_master_eip2333(byte[] IKM) {
    blstJNI.SecretKey_derive_master_eip2333(swigCPtr, IKM);
  }

  public void derive_child_eip2333(SecretKey SK, long child_index) {
    blstJNI.SecretKey_derive_child_eip2333(swigCPtr, SecretKey.getCPtr(SK), child_index);
  }

  public void from_bendian(byte[] in) {
    blstJNI.SecretKey_from_bendian(swigCPtr, in);
  }

  public void from_lendian(byte[] in) {
    blstJNI.SecretKey_from_lendian(swigCPtr, in);
  }

  public byte[] to_bendian() { return blstJNI.SecretKey_to_bendian(swigCPtr); }

  public byte[] to_lendian() { return blstJNI.SecretKey_to_lendian(swigCPtr); }

  public SecretKey() { this(blstJNI.new_SecretKey()); }

}
