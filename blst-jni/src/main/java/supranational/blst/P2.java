/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package supranational.blst;

public class P2 {
  private transient long[] swigCPtr;

  protected P2(long[] cPtr) { swigCPtr = cPtr; }

  protected static long[] getCPtr(P2 obj) {
    return obj != null ? obj.swigCPtr : null;
  }

  public P2 dup() { return new P2(swigCPtr.clone()); }

  public P2() { this(blstJNI.new_P2__SWIG_0()); }

  public P2(SecretKey sk) { this(blstJNI.new_P2__SWIG_1(SecretKey.getCPtr(sk))); }

  public P2(byte[] in) { this(blstJNI.new_P2__SWIG_2(in)); }

  public P2(P2_Affine affine) { this(blstJNI.new_P2__SWIG_3(P2_Affine.getCPtr(affine))); }

  public P2_Affine to_affine() {
    return new P2_Affine(blstJNI.P2_to_affine(swigCPtr));
}

  public byte[] serialize() { return blstJNI.P2_serialize(swigCPtr); }

  public byte[] compress() { return blstJNI.P2_compress(swigCPtr); }

  public boolean on_curve() {
    return blstJNI.P2_on_curve(swigCPtr);
  }

  public boolean in_group() {
    return blstJNI.P2_in_group(swigCPtr);
  }

  public boolean is_inf() {
    return blstJNI.P2_is_inf(swigCPtr);
  }

  public boolean is_equal(P2 p) {
    return blstJNI.P2_is_equal(swigCPtr, P2.getCPtr(p));
  }

  public void aggregate(P2_Affine in) {
    blstJNI.P2_aggregate(swigCPtr, P2_Affine.getCPtr(in));
  }

  public P2 sign_with(SecretKey sk) { blstJNI.P2_sign_with__SWIG_0(swigCPtr, SecretKey.getCPtr(sk)); return this; }

  public P2 sign_with(Scalar scalar) { blstJNI.P2_sign_with__SWIG_1(swigCPtr, Scalar.getCPtr(scalar)); return this; }

  public P2 hash_to(byte[] msg, String DST, byte[] aug) { blstJNI.P2_hash_to__SWIG_0(swigCPtr, msg, DST, aug); return this; }

  public P2 hash_to(byte[] msg, String DST) { blstJNI.P2_hash_to__SWIG_2(swigCPtr, msg, DST); return this; }

  public P2 hash_to(byte[] msg) { blstJNI.P2_hash_to__SWIG_3(swigCPtr, msg); return this; }

  public P2 encode_to(byte[] msg, String DST, byte[] aug) { blstJNI.P2_encode_to__SWIG_0(swigCPtr, msg, DST, aug); return this; }

  public P2 encode_to(byte[] msg, String DST) { blstJNI.P2_encode_to__SWIG_2(swigCPtr, msg, DST); return this; }

  public P2 encode_to(byte[] msg) { blstJNI.P2_encode_to__SWIG_3(swigCPtr, msg); return this; }

  public P2 mult(java.math.BigInteger scalar) { blstJNI.P2_mult__SWIG_0(swigCPtr, scalar.toByteArray()); return this; }

  public P2 mult(Scalar scalar) { blstJNI.P2_mult__SWIG_1(swigCPtr, Scalar.getCPtr(scalar)); return this; }

  public P2 cneg(boolean flag) { blstJNI.P2_cneg(swigCPtr, flag); return this; }

  public P2 neg() { blstJNI.P2_neg(swigCPtr); return this; }

  public P2 add(P2 a) { blstJNI.P2_add__SWIG_0(swigCPtr, P2.getCPtr(a)); return this; }

  public P2 add(P2_Affine a) { blstJNI.P2_add__SWIG_1(swigCPtr, P2_Affine.getCPtr(a)); return this; }

  public P2 dbl() { blstJNI.P2_dbl(swigCPtr); return this; }

  public static P2 generator() {
    return new P2(blstJNI.P2_generator());
}

}
