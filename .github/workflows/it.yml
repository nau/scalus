name: Integration tests
on:
  workflow_dispatch:
  #  inputs:
  #    parameter:
  #      description: My Parameter
  schedule:
    - cron: '00 08,22 * * *'
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download data
        uses: robinraju/release-downloader@v1
        with:
          # A flag to set the download target as latest release
          # The default value is 'false'
          latest: true

          # A flag to download from prerelease. It should be combined with latest flag.
          # The default value is 'false'
          preRelease: true

          # The github tag. e.g: v1.0.1
          # Download assets from a specific tag/version
          tag: 'it-data'

          # The release id to download files from
          #releaseId: ''

          # The name of the file to download.
          # Use this field only to specify filenames other than tarball or zipball, if any.
          # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
          fileName: 'it-data.zip'

          # Download the attached tarball (*.tar.gz)
          #tarBall: true

          # Download the attached zipball (*.zip)
          zipBall: true

          # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
          # It will create the target directory automatically if not present
          # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
          out-file-path: 'it-data'

          # A flag to set if the downloaded assets are archives and should be extracted
          # Checks all downloaded files if they end with zip, tar or tar.gz and extracts them, if true.
          # Prints a warning if enabled but file is not an archive - but does not fail.
          extract: true

          # Github access token to download files from private repositories
          # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
          # eg: token: ${{ secrets.MY_TOKEN }}
          #token: ''

          # The URL of the Github API, only use this input if you are using Github Enterprise
          # Default: "https://api.github.com"
          # Use http(s)://[hostname]/api/v3 to access the API for GitHub Enterprise Server
          #github-api-url: ''

      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
            substituters = https://cache.iog.io https://cache.nixos.org/ https://iohk.cachix.org https://nix-community.cachix.org
            accept-flake-config = true
            allow-import-from-derivation = true
            experimental-features = nix-command flakes
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Build and test in Nix devshell
        run: nix develop .#ci --accept-flake-config --command bash -c "export SCALUS_IT_DATA_PATH=$GITHUB_WORKSPACE/it-data/it-data; sbt it"
      - name: Report test results
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "IT ${{ job.status == 'success' && '✅' || '❌' }} - ${{ github.actor }} on ${{ github.ref_name }}"
          description: "[${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})"
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          nodetail: true
          notimestamp: true
