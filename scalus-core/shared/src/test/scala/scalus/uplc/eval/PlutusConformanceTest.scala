package scalus
package uplc
package eval

import scalus.builtin.given
import org.scalatest.funsuite.AnyFunSuite

import java.nio.file.{Files, Paths}
import scala.util.Failure
import scala.util.Success
import scala.util.Try

/** Tests for the Plutus Conformance Test Suite.
  *
  * @note
  *   This tests run only on JVM right now.
  */
abstract class PlutusConformanceTest extends AnyFunSuite:
    private given PlutusVM = PlutusVM.makePlutusV3VM()
    // Run this command in plutus-conformance to generate the test cases
    // find . -name "*.uplc" -print0 | sort -zf | xargs -0 -I {} bash -c 'file="{}"; rel_path="${file#./}"; without_ext="${rel_path%.uplc}"; echo "check(\"$without_ext\")"'

    // disable scalafmt for the following block
    // format: off
    check("builtin/constant/bool/boolean/boolean")
    check("builtin/constant/bool/false-lc/false-lc")
    check("builtin/constant/bool/False/False")
    check("builtin/constant/bool/Maybe/Maybe")
    check("builtin/constant/bool/true-lc/true-lc")
    check("builtin/constant/bool/True/True")
    check("builtin/constant/bytestring/bytestring-01/bytestring-01")
    check("builtin/constant/bytestring/bytestring-02/bytestring-02")
    check("builtin/constant/bytestring/bytestring-03/bytestring-03")
    check("builtin/constant/bytestring/bytestring-04/bytestring-04")
    check("builtin/constant/data/dataByteString/dataByteString")
    check("builtin/constant/data/dataConstr/dataConstr")
    check("builtin/constant/data/dataInteger/dataInteger")
    check("builtin/constant/data/dataList/dataList")
    check("builtin/constant/data/dataMap/dataMap")
    check("builtin/constant/data/dataMisByteString/dataMisByteString")
    check("builtin/constant/data/dataMisConstr/dataMisConstr")
    check("builtin/constant/data/dataMisInteger/dataMisInteger")
    check("builtin/constant/data/dataMisList/dataMisList")
    check("builtin/constant/data/dataMisMap/dataMisMap")
    check("builtin/constant/integer/integer-01/integer-01")
    check("builtin/constant/integer/integer-02/integer-02")
    check("builtin/constant/integer/integer-03/integer-03")
    check("builtin/constant/integer/integer-04/integer-04")
    check("builtin/constant/integer/integer-05/integer-05")
    check("builtin/constant/integer/integer-06/integer-06")
    check("builtin/constant/integer/integer-07/integer-07")
    check("builtin/constant/integer/integer-08/integer-08")
    check("builtin/constant/integer/integer-09/integer-09")
    check("builtin/constant/integer/integer10/integer10")
    check("builtin/constant/list/emptyList/emptyList")
    check("builtin/constant/list/illTypedList-01/illTypedList-01")
    check("builtin/constant/list/illTypedList-02/illTypedList-02")
    check("builtin/constant/list/simpleList/simpleList")
    check("builtin/constant/list/unitList/unitList")
    check("builtin/constant/pair/illTypedNestedPair/illTypedNestedPair")
    check("builtin/constant/pair/illTypedPair-01/illTypedPair-01")
    check("builtin/constant/pair/illTypedPair-02/illTypedPair-02")
    check("builtin/constant/pair/nestedPair/nestedPair")
    check("builtin/constant/pair/simplePair/simplePair")
    check("builtin/constant/string/string-01/string-01")
    check("builtin/constant/string/string-02/string-02")
    check("builtin/constant/string/string-03/string-03")
    check("builtin/constant/string/string-04/string-04")
    check("builtin/constant/string/string-05/string-05")
    check("builtin/constant/string/string-06/string-06")
    check("builtin/constant/unit/unit-fail-1/unit-fail-1")
    check("builtin/constant/unit/unit-fail-2/unit-fail-2")
    check("builtin/constant/unit/unit/unit")
    check("builtin/interleaving/ite/ite")
    check("builtin/interleaving/iteAtIntegerArrowIntegerApplied1/iteAtIntegerArrowIntegerApplied1")
    check("builtin/interleaving/iteAtIntegerArrowIntegerApplied2/iteAtIntegerArrowIntegerApplied2")
    check("builtin/interleaving/iteAtIntegerArrowIntegerAppliedApplied/iteAtIntegerArrowIntegerAppliedApplied")
    check("builtin/interleaving/iteAtIntegerArrowIntegerWithCond/iteAtIntegerArrowIntegerWithCond")
    check("builtin/interleaving/iteForceAppForce/iteForceAppForce")
    check("builtin/interleaving/iteForced/iteForced")
    check("builtin/interleaving/iteForcedForced/iteForcedForced")
    check("builtin/interleaving/iteForcedWithIntegerAndString/iteForcedWithIntegerAndString")
    check("builtin/interleaving/iteStringInteger/iteStringInteger")
    check("builtin/interleaving/iteStringString/iteStringString")
    check("builtin/interleaving/iteUnforcedFullyApplied/iteUnforcedFullyApplied")
    check("builtin/interleaving/iteUnforcedWithCond/iteUnforcedWithCond")
    check("builtin/interleaving/iteWrongCondTypeFullyAppied/iteWrongCondTypeFullyAppied")
    check("builtin/interleaving/iteWrongCondTypePartiallyApplied/iteWrongCondTypePartiallyApplied")
    check("builtin/interleaving/multiplyIntegerForceError1/multiplyIntegerForceError1")
    check("builtin/interleaving/multiplyIntegerForceError2/multiplyIntegerForceError2")
    check("builtin/interleaving/multiplyIntegerForceError3/multiplyIntegerForceError3")
    check("builtin/semantics/addInteger/addInteger-01/addInteger-01")
    check("builtin/semantics/addInteger/addInteger-02/addInteger-02")
    check("builtin/semantics/addInteger/addInteger-03/addInteger-03")
    check("builtin/semantics/addInteger/addInteger-04/addInteger-04")
    check("builtin/semantics/addInteger/addInteger-uncurried/addInteger-uncurried")
    check("builtin/semantics/andByteString/case-01/case-01")
    check("builtin/semantics/andByteString/case-02/case-02")
    check("builtin/semantics/andByteString/case-03/case-03")
    check("builtin/semantics/andByteString/case-04/case-04")
    check("builtin/semantics/andByteString/case-05/case-05")
    check("builtin/semantics/andByteString/case-06/case-06")
    check("builtin/semantics/andByteString/case-07/case-07")
    check("builtin/semantics/andByteString/case-08/case-08")
    check("builtin/semantics/andByteString/case-09/case-09")
    check("builtin/semantics/andByteString/case-10/case-10")
    check("builtin/semantics/andByteString/case-11/case-11")
    check("builtin/semantics/andByteString/case-12/case-12")
    check("builtin/semantics/andByteString/case-13/case-13")
    check("builtin/semantics/andByteString/case-14/case-14")
    check("builtin/semantics/appendByteString/appendByteString-01/appendByteString-01")
    check("builtin/semantics/appendByteString/appendByteString-02/appendByteString-02")
    check("builtin/semantics/appendByteString/appendByteString-03/appendByteString-03")
    check("builtin/semantics/appendString/appendString")
    check("builtin/semantics/bData/bData")
    check("builtin/semantics/blake2b_224/blake2b_224-empty/blake2b_224-empty")
    check("builtin/semantics/blake2b_224/blake2b_224-length-200/blake2b_224-length-200")
    check("builtin/semantics/blake2b_256/blake2b_256-empty/blake2b_256-empty")
    check("builtin/semantics/blake2b_256/blake2b_256-length-200/blake2b_256-length-200")
    check("builtin/semantics/byteStringToInteger/big-endian/all-zeros/all-zeros")
    check("builtin/semantics/byteStringToInteger/big-endian/correct-output/correct-output")
    check("builtin/semantics/byteStringToInteger/big-endian/empty/empty")
    check("builtin/semantics/byteStringToInteger/big-endian/leading-zeros/leading-zeros")
    check("builtin/semantics/byteStringToInteger/both-endian/both-endian")
    check("builtin/semantics/byteStringToInteger/little-endian/all-zeros/all-zeros")
    check("builtin/semantics/byteStringToInteger/little-endian/correct-output/correct-output")
    check("builtin/semantics/byteStringToInteger/little-endian/empty/empty")
    check("builtin/semantics/byteStringToInteger/little-endian/trailing-zeros/trailing-zeros")
    check("builtin/semantics/chooseDataByteString/chooseDataByteString")
    check("builtin/semantics/chooseDataConstr/chooseDataConstr")
    check("builtin/semantics/chooseDataInteger/chooseDataInteger")
    check("builtin/semantics/chooseDataList/chooseDataList")
    check("builtin/semantics/chooseDataMap/chooseDataMap")
    check("builtin/semantics/chooseList/chooseList-01/chooseList-01")
    check("builtin/semantics/chooseList/chooseList-02/chooseList-02")
    check("builtin/semantics/chooseList/chooseList-03/chooseList-03")
    check("builtin/semantics/chooseList/chooseList-04/chooseList-04")
    check("builtin/semantics/chooseUnit/chooseUnit-01/chooseUnit-01")
    check("builtin/semantics/chooseUnit/chooseUnit-02/chooseUnit-02")
    check("builtin/semantics/complementByteString/case-01/case-01")
    check("builtin/semantics/complementByteString/case-02/case-02")
    check("builtin/semantics/complementByteString/case-03/case-03")
    check("builtin/semantics/complementByteString/case-04/case-04")
    check("builtin/semantics/complementByteString/case-05/case-05")
    check("builtin/semantics/consByteString/consByteString-01/consByteString-01")
    check("builtin/semantics/consByteString/consByteString-02/consByteString-02")
    check("builtin/semantics/consByteString/consByteString-03/consByteString-03")
    check("builtin/semantics/constrData/constrData")
    check("builtin/semantics/countSetBits/case-01/case-01")
    check("builtin/semantics/countSetBits/case-02/case-02")
    check("builtin/semantics/countSetBits/case-03/case-03")
    check("builtin/semantics/countSetBits/case-04/case-04")
    check("builtin/semantics/countSetBits/case-05/case-05")
    check("builtin/semantics/countSetBits/case-06/case-06")
    check("builtin/semantics/countSetBits/case-07/case-07")
    check("builtin/semantics/countSetBits/case-08/case-08")
    check("builtin/semantics/decodeUtf8/decodeUtf8-invalid/decodeUtf8-invalid")
    check("builtin/semantics/decodeUtf8/decodeUtf8-ok/decodeUtf8-ok")
    check("builtin/semantics/divideInteger/divideInteger-01/divideInteger-01")
    check("builtin/semantics/divideInteger/divideInteger-neg-neg/divideInteger-neg-neg")
    check("builtin/semantics/divideInteger/divideInteger-neg-pos/divideInteger-neg-pos")
    check("builtin/semantics/divideInteger/divideInteger-pos-neg/divideInteger-pos-neg")
    check("builtin/semantics/divideInteger/divideInteger-pos-pos/divideInteger-pos-pos")
    check("builtin/semantics/divideInteger/divideInteger-zero/divideInteger-zero")
    check("builtin/semantics/encodeUtf8/encodeUtf8")
    check("builtin/semantics/equalsByteString/equalsByteString-01/equalsByteString-01")
    check("builtin/semantics/equalsByteString/equalsByteString-02/equalsByteString-02")
    check("builtin/semantics/equalsByteString/equalsByteString/equalsByteString")
    check("builtin/semantics/equalsData/equalsData-01/equalsData-01")
    check("builtin/semantics/equalsData/equalsData-02/equalsData-02")
    check("builtin/semantics/equalsData/equalsData-03/equalsData-03")
    check("builtin/semantics/equalsData/equalsData-04/equalsData-04")
    check("builtin/semantics/equalsInteger/equalsInteger-01/equalsInteger-01")
    check("builtin/semantics/equalsInteger/equalsInteger-02/equalsInteger-02")
    check("builtin/semantics/equalsInteger/equalsInteger-03/equalsInteger-03")
    check("builtin/semantics/equalsString/equalsString-01/equalsString-01")
    check("builtin/semantics/equalsString/equalsString-02/equalsString-02")
    // TODO: This builtin is not enabled in Plutus, ignore plutus-conformance tests
    ignore("builtin/semantics/expModInteger/exp-neg-non-inverse-01/exp-neg-non-inverse-01")(())
    ignore("builtin/semantics/expModInteger/exp-neg-non-inverse-02/exp-neg-non-inverse-02")(())
    ignore("builtin/semantics/expModInteger/expMod-01/expMod-01")(())
    ignore("builtin/semantics/expModInteger/expMod-02/expMod-02")(())
    ignore("builtin/semantics/expModInteger/expMod-03/expMod-03")(())
    ignore("builtin/semantics/expModInteger/expMod-04/expMod-04")(())
    ignore("builtin/semantics/expModInteger/expMod-05/expMod-05")(())
    ignore("builtin/semantics/expModInteger/mod-neg/mod-neg")(())
    ignore("builtin/semantics/expModInteger/mod-zero/mod-zero")(())
    check("builtin/semantics/findFirstSetBit/case-01/case-01")
    check("builtin/semantics/findFirstSetBit/case-02/case-02")
    check("builtin/semantics/findFirstSetBit/case-03/case-03")
    check("builtin/semantics/findFirstSetBit/case-04/case-04")
    check("builtin/semantics/findFirstSetBit/case-05/case-05")
    check("builtin/semantics/findFirstSetBit/case-06/case-06")
    check("builtin/semantics/findFirstSetBit/case-07/case-07")
    check("builtin/semantics/fstPair/fstPair")
    check("builtin/semantics/headList/headList-01/headList-01")
    check("builtin/semantics/headList/headList-02/headList-02")
    check("builtin/semantics/headList/headList-03/headList-03")
    check("builtin/semantics/headList/headPartial/headPartial")
    check("builtin/semantics/iData/iData")
    check("builtin/semantics/ifThenElse/ifThenElse-01/ifThenElse-01")
    check("builtin/semantics/ifThenElse/ifThenElse-02/ifThenElse-02")
    check("builtin/semantics/ifThenElse/ifThenElse-03/ifThenElse-03")
    check("builtin/semantics/ifThenElse/ifThenElse-04/ifThenElse-04")
    check("builtin/semantics/ifThenElse/ifThenElse-bad-cond-01/ifThenElse-bad-cond-01")
    check("builtin/semantics/ifThenElse/ifThenElse-bad-cond-02/ifThenElse-bad-cond-02")
    check("builtin/semantics/ifThenElse/ifThenElse-no-force/ifThenElse-no-force")
    check("builtin/semantics/indexByteString/indexByteString-01/indexByteString-01")
    check("builtin/semantics/indexByteString/indexByteStringOOB/indexByteStringOOB")
    check("builtin/semantics/indexByteString/indexByteStringOverflow/indexByteStringOverflow")
    check("builtin/semantics/integerToByteString/big-endian/bounded/correct-output-exact-width/correct-output-exact-width")
    check("builtin/semantics/integerToByteString/big-endian/bounded/correct-output-extra-width/correct-output-extra-width")
    check("builtin/semantics/integerToByteString/big-endian/bounded/max-input-fits-max-width/max-input-fits-max-width")
    check("builtin/semantics/integerToByteString/big-endian/bounded/max-input-width-too-small/max-input-width-too-small")
    check("builtin/semantics/integerToByteString/big-endian/bounded/max-width-input-too-big/max-width-input-too-big")
    check("builtin/semantics/integerToByteString/big-endian/bounded/maximum-width-zero/maximum-width-zero")
    check("builtin/semantics/integerToByteString/big-endian/bounded/negative-input/negative-input")
    check("builtin/semantics/integerToByteString/big-endian/bounded/negative-width/negative-width")
    check("builtin/semantics/integerToByteString/big-endian/bounded/too-narrow/too-narrow")
    check("builtin/semantics/integerToByteString/big-endian/bounded/width-too-big-zero/width-too-big-zero")
    check("builtin/semantics/integerToByteString/big-endian/bounded/zero/zero")
    check("builtin/semantics/integerToByteString/big-endian/unbounded/correct-output/correct-output")
    check("builtin/semantics/integerToByteString/big-endian/unbounded/input-too-big/input-too-big")
    check("builtin/semantics/integerToByteString/big-endian/unbounded/maximum-input/maximum-input")
    check("builtin/semantics/integerToByteString/big-endian/unbounded/negative-input/negative-input")
    check("builtin/semantics/integerToByteString/big-endian/unbounded/zero/zero")
    check("builtin/semantics/integerToByteString/little-endian/bounded/correct-output-exact-width/correct-output-exact-width")
    check("builtin/semantics/integerToByteString/little-endian/bounded/correct-output-extra-width/correct-output-extra-width")
    check("builtin/semantics/integerToByteString/little-endian/bounded/max-input-fits-max-width/max-input-fits-max-width")
    check("builtin/semantics/integerToByteString/little-endian/bounded/max-input-width-too-small/max-input-width-too-small")
    check("builtin/semantics/integerToByteString/little-endian/bounded/max-width-input-too-big/max-width-input-too-big")
    check("builtin/semantics/integerToByteString/little-endian/bounded/maximum-width-zero/maximum-width-zero")
    check("builtin/semantics/integerToByteString/little-endian/bounded/negative-input/negative-input")
    check("builtin/semantics/integerToByteString/little-endian/bounded/negative-width/negative-width")
    check("builtin/semantics/integerToByteString/little-endian/bounded/too-narrow/too-narrow")
    check("builtin/semantics/integerToByteString/little-endian/bounded/width-too-big-zero/width-too-big-zero")
    check("builtin/semantics/integerToByteString/little-endian/bounded/zero/zero")
    check("builtin/semantics/integerToByteString/little-endian/unbounded/correct-output/correct-output")
    check("builtin/semantics/integerToByteString/little-endian/unbounded/input-too-big/input-too-big")
    check("builtin/semantics/integerToByteString/little-endian/unbounded/maximum-input/maximum-input")
    check("builtin/semantics/integerToByteString/little-endian/unbounded/negative-input/negative-input")
    check("builtin/semantics/integerToByteString/little-endian/unbounded/zero/zero")
    check("builtin/semantics/keccak_256/keccak_256-empty/keccak_256-empty")
    check("builtin/semantics/keccak_256/keccak_256-length-200/keccak_256-length-200")
    check("builtin/semantics/lengthOfByteString/lengthOfByteString")
    check("builtin/semantics/lessThanByteString/lessThanByteString-00/lessThanByteString-00")
    check("builtin/semantics/lessThanByteString/lessThanByteString-01/lessThanByteString-01")
    check("builtin/semantics/lessThanByteString/lessThanByteString-02/lessThanByteString-02")
    check("builtin/semantics/lessThanByteString/lessThanByteString-03/lessThanByteString-03")
    check("builtin/semantics/lessThanByteString/lessThanByteString-04/lessThanByteString-04")
    check("builtin/semantics/lessThanByteString/lessThanByteString-05/lessThanByteString-05")
    check("builtin/semantics/lessThanEqualsByteString/lessThanEqualsByteString-00/lessThanEqualsByteString-00")
    check("builtin/semantics/lessThanEqualsByteString/lessThanEqualsByteString-01/lessThanEqualsByteString-01")
    check("builtin/semantics/lessThanEqualsByteString/lessThanEqualsByteString-02/lessThanEqualsByteString-02")
    check("builtin/semantics/lessThanEqualsByteString/lessThanEqualsByteString-03/lessThanEqualsByteString-03")
    check("builtin/semantics/lessThanEqualsInteger/lessThanEqualsInteger-01/lessThanEqualsInteger-01")
    check("builtin/semantics/lessThanEqualsInteger/lessThanEqualsInteger-02/lessThanEqualsInteger-02")
    check("builtin/semantics/lessThanEqualsInteger/lessThanEqualsInteger-03/lessThanEqualsInteger-03")
    check("builtin/semantics/lessThanEqualsInteger/lessThanEqualsInteger-04/lessThanEqualsInteger-04")
    check("builtin/semantics/lessThanEqualsInteger/lessThanEqualsInteger-05/lessThanEqualsInteger-05")
    check("builtin/semantics/lessThanInteger/lessThanInteger-01/lessThanInteger-01")
    check("builtin/semantics/lessThanInteger/lessThanInteger-02/lessThanInteger-02")
    check("builtin/semantics/lessThanInteger/lessThanInteger-03/lessThanInteger-03")
    check("builtin/semantics/lessThanInteger/lessThanInteger-04/lessThanInteger-04")
    check("builtin/semantics/lessThanInteger/lessThanInteger-05/lessThanInteger-05")
    check("builtin/semantics/listData/listData")
    check("builtin/semantics/listOfList/listOfList")
    check("builtin/semantics/listOfPair/listOfPair")
    check("builtin/semantics/mapData/mapData")
    check("builtin/semantics/mkCons/divideInteger/divideInteger")
    check("builtin/semantics/mkCons/mkCons-01/mkCons-01")
    check("builtin/semantics/mkCons/mkCons-02/mkCons-02")
    check("builtin/semantics/mkCons/mkCons-fail/mkCons-fail")
    check("builtin/semantics/mkNilData/mkNilData")
    check("builtin/semantics/mkNilPairData/mkNilPairData")
    check("builtin/semantics/mkPairData/mkPairData")
    check("builtin/semantics/modInteger/modInteger-01/modInteger-01")
    check("builtin/semantics/modInteger/modInteger-neg-neg/modInteger-neg-neg")
    check("builtin/semantics/modInteger/modInteger-neg-pos/modInteger-neg-pos")
    check("builtin/semantics/modInteger/modInteger-pos-neg/modInteger-pos-neg")
    check("builtin/semantics/modInteger/modInteger-pos-pos/modInteger-pos-pos")
    check("builtin/semantics/modInteger/modInteger-zero/modInteger-zero")
    check("builtin/semantics/multiplyInteger/multiplyInteger-01/multiplyInteger-01")
    check("builtin/semantics/multiplyInteger/multiplyInteger-02/multiplyInteger-02")
    check("builtin/semantics/multiplyInteger/multiplyInteger-03/multiplyInteger-03")
    check("builtin/semantics/multiplyInteger/multiplyInteger-04/multiplyInteger-04")
    check("builtin/semantics/multiplyInteger/multiplyInteger-05/multiplyInteger-05")
    check("builtin/semantics/multiplyInteger/multiplyInteger-06/multiplyInteger-06")
    check("builtin/semantics/nullList/nullList-01/nullList-01")
    check("builtin/semantics/nullList/nullList-02/nullList-02")
    check("builtin/semantics/orByteString/case-01/case-01")
    check("builtin/semantics/orByteString/case-02/case-02")
    check("builtin/semantics/orByteString/case-03/case-03")
    check("builtin/semantics/orByteString/case-04/case-04")
    check("builtin/semantics/orByteString/case-05/case-05")
    check("builtin/semantics/orByteString/case-06/case-06")
    check("builtin/semantics/orByteString/case-07/case-07")
    check("builtin/semantics/orByteString/case-08/case-08")
    check("builtin/semantics/orByteString/case-09/case-09")
    check("builtin/semantics/orByteString/case-10/case-10")
    check("builtin/semantics/orByteString/case-11/case-11")
    check("builtin/semantics/orByteString/case-12/case-12")
    check("builtin/semantics/orByteString/case-13/case-13")
    check("builtin/semantics/orByteString/case-14/case-14")
    check("builtin/semantics/pairOfPairAndList/pairOfPairAndList")
    check("builtin/semantics/quotientInteger/quotientInteger-01/quotientInteger-01")
    check("builtin/semantics/quotientInteger/quotientInteger-neg-neg/quotientInteger-neg-neg")
    check("builtin/semantics/quotientInteger/quotientInteger-neg-pos/quotientInteger-neg-pos")
    check("builtin/semantics/quotientInteger/quotientInteger-pos-neg/quotientInteger-pos-neg")
    check("builtin/semantics/quotientInteger/quotientInteger-pos-pos/quotientInteger-pos-pos")
    check("builtin/semantics/quotientInteger/quotientInteger-zero/quotientInteger-zero")
    check("builtin/semantics/readBit/case-01/case-01")
    check("builtin/semantics/readBit/case-02/case-02")
    check("builtin/semantics/readBit/case-03/case-03")
    check("builtin/semantics/readBit/case-04/case-04")
    check("builtin/semantics/readBit/case-05/case-05")
    check("builtin/semantics/readBit/case-06/case-06")
    check("builtin/semantics/readBit/case-07/case-07")
    check("builtin/semantics/readBit/case-08/case-08")
    check("builtin/semantics/readBit/case-09/case-09")
    check("builtin/semantics/readBit/case-10/case-10")
    check("builtin/semantics/readBit/case-11/case-11")
    check("builtin/semantics/readBit/case-12/case-12")
    check("builtin/semantics/readBit/case-13/case-13")
    check("builtin/semantics/readBit/case-14/case-14")
    check("builtin/semantics/readBit/case-15/case-15")
    check("builtin/semantics/readBit/case-16/case-16")
    check("builtin/semantics/readBit/case-17/case-17")
    check("builtin/semantics/readBit/case-18/case-18")
    check("builtin/semantics/readBit/case-19/case-19")
    check("builtin/semantics/readBit/case-20/case-20")
    check("builtin/semantics/readBit/case-21/case-21")
    check("builtin/semantics/readBit/case-22/case-22")
    check("builtin/semantics/remainderInteger/remainderInteger-01/remainderInteger-01")
    check("builtin/semantics/remainderInteger/remainderInteger-neg-neg/remainderInteger-neg-neg")
    check("builtin/semantics/remainderInteger/remainderInteger-neg-pos/remainderInteger-neg-pos")
    check("builtin/semantics/remainderInteger/remainderInteger-pos-neg/remainderInteger-pos-neg")
    check("builtin/semantics/remainderInteger/remainderInteger-pos-pos/remainderInteger-pos-pos")
    check("builtin/semantics/remainderInteger/remainderInteger-zero/remainderInteger-zero")
    check("builtin/semantics/replicateByte/case-01/case-01")
    check("builtin/semantics/replicateByte/case-02/case-02")
    check("builtin/semantics/replicateByte/case-03/case-03")
    check("builtin/semantics/replicateByte/case-04/case-04")
    check("builtin/semantics/replicateByte/case-05/case-05")
    check("builtin/semantics/replicateByte/case-06/case-06")
    check("builtin/semantics/replicateByte/case-07/case-07")
    check("builtin/semantics/replicateByte/case-08/case-08")
    check("builtin/semantics/replicateByte/case-09/case-09")
    check("builtin/semantics/replicateByte/case-10/case-10")
    check("builtin/semantics/rotateByteString/case-01/case-01")
    check("builtin/semantics/rotateByteString/case-02/case-02")
    check("builtin/semantics/rotateByteString/case-03/case-03")
    check("builtin/semantics/rotateByteString/case-04/case-04")
    check("builtin/semantics/rotateByteString/case-05/case-05")
    check("builtin/semantics/rotateByteString/case-06/case-06")
    check("builtin/semantics/rotateByteString/case-07/case-07")
    check("builtin/semantics/rotateByteString/case-08/case-08")
    check("builtin/semantics/rotateByteString/case-09/case-09")
    check("builtin/semantics/rotateByteString/case-10/case-10")
    check("builtin/semantics/rotateByteString/case-11/case-11")
    check("builtin/semantics/rotateByteString/case-12/case-12")
    check("builtin/semantics/rotateByteString/case-13/case-13")
    check("builtin/semantics/rotateByteString/case-14/case-14")
    check("builtin/semantics/rotateByteString/case-15/case-15")
    check("builtin/semantics/rotateByteString/case-16/case-16")
    check("builtin/semantics/rotateByteString/case-17/case-17")
    check("builtin/semantics/rotateByteString/case-18/case-18")
    check("builtin/semantics/sha2_256/sha2_256-empty/sha2_256-empty")
    check("builtin/semantics/sha2_256/sha2_256-length-200/sha2_256-length-200")
    check("builtin/semantics/sha3_256/sha3_256-empty/sha3_256-empty")
    check("builtin/semantics/sha3_256/sha3_256-length-200/sha3_256-length-200")
    check("builtin/semantics/shiftByteString/case-01/case-01")
    check("builtin/semantics/shiftByteString/case-02/case-02")
    check("builtin/semantics/shiftByteString/case-03/case-03")
    check("builtin/semantics/shiftByteString/case-04/case-04")
    check("builtin/semantics/shiftByteString/case-05/case-05")
    check("builtin/semantics/shiftByteString/case-06/case-06")
    check("builtin/semantics/shiftByteString/case-07/case-07")
    check("builtin/semantics/shiftByteString/case-08/case-08")
    check("builtin/semantics/shiftByteString/case-09/case-09")
    check("builtin/semantics/shiftByteString/case-10/case-10")
    check("builtin/semantics/shiftByteString/case-11/case-11")
    check("builtin/semantics/shiftByteString/case-12/case-12")
    check("builtin/semantics/shiftByteString/case-13/case-13")
    check("builtin/semantics/shiftByteString/case-14/case-14")
    check("builtin/semantics/shiftByteString/case-15/case-15")
    check("builtin/semantics/sliceByteString/sliceByteString-01/sliceByteString-01")
    check("builtin/semantics/sliceByteString/sliceByteString-02/sliceByteString-02")
    check("builtin/semantics/sliceByteString/sliceByteString-03/sliceByteString-03")
    check("builtin/semantics/sliceByteString/sliceByteString-04/sliceByteString-04")
    check("builtin/semantics/sliceByteString/sliceByteString-05/sliceByteString-05")
    check("builtin/semantics/sndPair/sndPair")
    check("builtin/semantics/subtractInteger-non-iter/subtractInteger-non-iter")
    check("builtin/semantics/subtractInteger/subtractInteger-01/subtractInteger-01")
    check("builtin/semantics/subtractInteger/subtractInteger-02/subtractInteger-02")
    check("builtin/semantics/subtractInteger/subtractInteger-03/subtractInteger-03")
    check("builtin/semantics/subtractInteger/subtractInteger-04/subtractInteger-04")
    check("builtin/semantics/tailList/tailList-01/tailList-01")
    check("builtin/semantics/tailList/tailList-partial/tailList-partial")
    check("builtin/semantics/trace/trace")
    check("builtin/semantics/unBData/unBData-01/unBData-01")
    check("builtin/semantics/unBData/unBData-fail/unBData-fail")
    check("builtin/semantics/unConstrData/unConstrData-01/unConstrData-01")
    check("builtin/semantics/unConstrData/unConstrData-fail/unConstrData-fail")
    check("builtin/semantics/unIData/unIData-01/unIData-01")
    check("builtin/semantics/unIData/unIData-fail/unIData-fail")
    check("builtin/semantics/unListData/unListData-01/unListData-01")
    check("builtin/semantics/unListData/unListData-fail/unListData-fail")
    check("builtin/semantics/unMapData/unMapData-01/unMapData-01")
    check("builtin/semantics/unMapData/unMapData-fail/unMapData-fail")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/invalid-key/invalid-key")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/long-key/long-key")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/long-msg/long-msg")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/long-sig/long-sig")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/short-key/short-key")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/short-msg/short-msg")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/short-sig/short-sig")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-01/test-vector-01")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-02/test-vector-02")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-03/test-vector-03")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-04/test-vector-04")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-05/test-vector-05")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-06/test-vector-06")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-07/test-vector-07")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-08/test-vector-08")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-09/test-vector-09")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-10/test-vector-10")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-11/test-vector-11")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-12/test-vector-12")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-13/test-vector-13")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-14/test-vector-14")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-15/test-vector-15")
    check("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-16/test-vector-16")
    /* FIXME: Theses test are failing because the signature is not valid
     * Plutus code throws error in this case.
     * We need to call secp256k1_ecdsa_signature_parse_compact function to parse the signature
     * but bitcoins-s secp256k1jni library does not export this function now.
     * TODO: either make a PR into the library and export this function or fork the library and export it.
     */
    ignore("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-17/test-vector-17")(())
    ignore("builtin/semantics/verifyEcdsaSecp256k1Signature/test-vector-18/test-vector-18")(())
    check("builtin/semantics/verifyEd25519Signature/long-key/long-key")
    check("builtin/semantics/verifyEd25519Signature/long-sig/long-sig")
    check("builtin/semantics/verifyEd25519Signature/short-key/short-key")
    check("builtin/semantics/verifyEd25519Signature/short-sig/short-sig")
    check("builtin/semantics/verifyEd25519Signature/test-vector-01/test-vector-01")
    check("builtin/semantics/verifyEd25519Signature/test-vector-02/test-vector-02")
    check("builtin/semantics/verifyEd25519Signature/test-vector-03/test-vector-03")
    check("builtin/semantics/verifyEd25519Signature/test-vector-04/test-vector-04")
    check("builtin/semantics/verifyEd25519Signature/test-vector-05/test-vector-05")
    check("builtin/semantics/verifyEd25519Signature/test-vector-06/test-vector-06")
    check("builtin/semantics/verifyEd25519Signature/test-vector-07/test-vector-07")
    check("builtin/semantics/verifyEd25519Signature/test-vector-08/test-vector-08")
    check("builtin/semantics/verifyEd25519Signature/test-vector-09/test-vector-09")
    check("builtin/semantics/verifyEd25519Signature/test-vector-10/test-vector-10")
    check("builtin/semantics/verifyEd25519Signature/test-vector-11/test-vector-11")
    check("builtin/semantics/verifyEd25519Signature/test-vector-12/test-vector-12")
    check("builtin/semantics/verifyEd25519Signature/test-vector-13/test-vector-13")
    check("builtin/semantics/verifyEd25519Signature/test-vector-14/test-vector-14")
    check("builtin/semantics/verifyEd25519Signature/test-vector-15/test-vector-15")
    check("builtin/semantics/verifyEd25519Signature/test-vector-16/test-vector-16")
    check("builtin/semantics/verifyEd25519Signature/test-vector-17/test-vector-17")
    check("builtin/semantics/verifyEd25519Signature/test-vector-18/test-vector-18")
    check("builtin/semantics/verifyEd25519Signature/test-vector-19/test-vector-19")
    check("builtin/semantics/verifyEd25519Signature/test-vector-20/test-vector-20")
    check("builtin/semantics/verifyEd25519Signature/test-vector-21/test-vector-21")
    check("builtin/semantics/verifyEd25519Signature/test-vector-22/test-vector-22")
    check("builtin/semantics/verifyEd25519Signature/test-vector-23/test-vector-23")
    check("builtin/semantics/verifyEd25519Signature/test-vector-24/test-vector-24")
    check("builtin/semantics/verifyEd25519Signature/test-vector-25/test-vector-25")
    check("builtin/semantics/verifyEd25519Signature/test-vector-26/test-vector-26")
    check("builtin/semantics/verifyEd25519Signature/test-vector-27/test-vector-27")
    check("builtin/semantics/verifyEd25519Signature/test-vector-28/test-vector-28")
    check("builtin/semantics/verifyEd25519Signature/test-vector-29/test-vector-29")
    check("builtin/semantics/verifyEd25519Signature/test-vector-30/test-vector-30")
    check("builtin/semantics/verifyEd25519Signature/test-vector-31/test-vector-31")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/long-key/long-key")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/long-sig/long-sig")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/short-key/short-key")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/short-sig/short-sig")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-00/test-vector-00")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-01/test-vector-01")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-02/test-vector-02")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-03/test-vector-03")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-04/test-vector-04")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-05/test-vector-05")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-06/test-vector-06")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-07/test-vector-07")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-08/test-vector-08")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-09/test-vector-09")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-10/test-vector-10")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-11/test-vector-11")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-12/test-vector-12")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-13/test-vector-13")
    check("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-14/test-vector-14")
    /* FIXME: Theses test are failing because bitcoins-s schnorrVerify function
     * expects a message to be 32 bytes long, which is against the BIP-340 specification.
     * I created an issue in the bitcoins-s repository to fix this: 
     * https://github.com/bitcoin-s/bitcoin-s/issues/5436
     */
    ignore("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-15/test-vector-15")(())
    ignore("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-16/test-vector-16")(())
    ignore("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-17/test-vector-17")(())
    ignore("builtin/semantics/verifySchnorrSecp256k1Signature/test-vector-18/test-vector-18")(())
    check("builtin/semantics/writeBits/case-01/case-01")
    check("builtin/semantics/writeBits/case-02/case-02")
    check("builtin/semantics/writeBits/case-03/case-03")
    check("builtin/semantics/writeBits/case-04/case-04")
    check("builtin/semantics/writeBits/case-05/case-05")
    check("builtin/semantics/writeBits/case-06/case-06")
    check("builtin/semantics/writeBits/case-07/case-07")
    check("builtin/semantics/writeBits/case-08/case-08")
    check("builtin/semantics/writeBits/case-09/case-09")
    check("builtin/semantics/writeBits/case-10/case-10")
    check("builtin/semantics/writeBits/case-11/case-11")
    check("builtin/semantics/writeBits/case-12/case-12")
    check("builtin/semantics/writeBits/case-13/case-13")
    check("builtin/semantics/writeBits/case-14/case-14")
    check("builtin/semantics/writeBits/case-15/case-15")
    check("builtin/semantics/writeBits/case-16/case-16")
    check("builtin/semantics/writeBits/case-17/case-17")
    check("builtin/semantics/writeBits/case-18/case-18")
    check("builtin/semantics/writeBits/case-19/case-19")
    check("builtin/semantics/writeBits/case-20/case-20")
    check("builtin/semantics/writeBits/case-21/case-21")
    check("builtin/semantics/writeBits/case-22/case-22")
    check("builtin/semantics/writeBits/case-23/case-23")
    check("builtin/semantics/writeBits/case-24/case-24")
    check("builtin/semantics/writeBits/case-25/case-25")
    check("builtin/semantics/writeBits/case-26/case-26")
    check("builtin/semantics/writeBits/case-27/case-27")
    check("builtin/semantics/writeBits/case-28/case-28")
    check("builtin/semantics/writeBits/case-29/case-29")
    check("builtin/semantics/writeBits/case-30/case-30")
    check("builtin/semantics/writeBits/case-31/case-31")
    check("builtin/semantics/writeBits/case-32/case-32")
    check("builtin/semantics/writeBits/case-33/case-33")
    check("builtin/semantics/writeBits/case-34/case-34")
    check("builtin/semantics/writeBits/case-35/case-35")
    check("builtin/semantics/writeBits/case-36/case-36")
    check("builtin/semantics/writeBits/case-37/case-37")
    check("builtin/semantics/writeBits/case-38/case-38")
    check("builtin/semantics/writeBits/case-39/case-39")
    check("builtin/semantics/writeBits/case-40/case-40")
    check("builtin/semantics/xorByteString/case-01/case-01")
    check("builtin/semantics/xorByteString/case-02/case-02")
    check("builtin/semantics/xorByteString/case-03/case-03")
    check("builtin/semantics/xorByteString/case-04/case-04")
    check("builtin/semantics/xorByteString/case-05/case-05")
    check("builtin/semantics/xorByteString/case-06/case-06")
    check("builtin/semantics/xorByteString/case-07/case-07")
    check("builtin/semantics/xorByteString/case-08/case-08")
    check("builtin/semantics/xorByteString/case-09/case-09")
    check("builtin/semantics/xorByteString/case-10/case-10")
    check("builtin/semantics/xorByteString/case-11/case-11")
    check("builtin/semantics/xorByteString/case-12/case-12")
    check("builtin/semantics/xorByteString/case-13/case-13")
    check("builtin/semantics/xorByteString/case-14/case-14")
    check("example/ApplyAdd1/ApplyAdd1")
    check("example/ApplyAdd2/ApplyAdd2")
    check("example/churchSucc/churchSucc")
    check("example/churchZero/churchZero")
    check("example/DivideByZero/DivideByZero")
    check("example/DivideByZeroDrop/DivideByZeroDrop")
    check("example/even2/even2")
    check("example/even3/even3")
    check("example/evenList/evenList")
    check("example/factorial/factorial")
    check("example/fibonacci/fibonacci")
    check("example/force-lam/force-lam")
    check("example/IfIntegers/IfIntegers")
    check("example/NatRoundTrip/NatRoundTrip")
    check("example/overapplication/overapplication")
    check("example/ScottListSum/ScottListSum")
    check("example/succInteger/succInteger")
    check("term/app/app-1/app-1")
    check("term/app/app-2/app-2")
    check("term/app/app-3/app-3")
    check("term/app/app-4/app-4")
    check("term/app/app-5/app-5")
    check("term/app/app-6/app-6")
    check("term/app/app-7/app-7")
    check("term/app/app-8/app-8")
    check("term/app/app-9/app-9")
    check("term/argExpected/argExpected")
    check("term/case/case-1/case-1")
    check("term/case/case-2/case-2")
    check("term/case/case-3/case-3")
    check("term/case/case-4/case-4")
    check("term/case/case-5/case-5")
    check("term/case/case-6/case-6")
    check("term/case/case-7/case-7")
    check("term/case/case-8/case-8")
    check("term/case/case-9/case-9")
    check("term/closure/closure")
    check("term/constr/constr-1/constr-1")
    check("term/constr/constr-2/constr-2")
    check("term/constr/constr-3/constr-3")
    check("term/constr/constr-4/constr-4")
    check("term/constr/constr-5/constr-5")
    check("term/constr/constr-6/constr-6")
    check("term/delay/delay-error-1/delay-error-1")
    check("term/delay/delay-error-2/delay-error-2")
    check("term/delay/delay-lam/delay-lam")
    check("term/force/force-1/force-1")
    check("term/force/force-2/force-2")
    check("term/force/force-3/force-3")
    check("term/force/force-4/force-4")
    check("term/lam/lam-1/lam-1")
    check("term/lam/lam-2/lam-2")
    check("term/nonFunctionalApplication/nonFunctionalApplication")
    check("term/unlifting-sat/unlifting-sat")
    check("term/unlifting-unsat/unlifting-unsat")
    check("term/var/var")

    private type EvalFailure = "evaluation failure"
    private type ParseError = "parse error"
    private type Error = EvalFailure | ParseError
    private def parseExpected(code: String): Either[Error, Term] = {
        code match
            case "evaluation failure" => Left("evaluation failure")
            case "parse error"        => Left("parse error")
            case _ =>
                UplcParser().parseProgram(code) match
                    case Left(value) => fail(s"Unexpected parse error: $value")
                    case Right(program) =>
                        Right(DeBruijn.deBruijnTerm(program.term))

    }

    private def eval(code: String): Either[Error, Result] = {
        UplcParser().parseProgram(code) match
            case Right(program) =>
                Right(program.term.evaluateDebug)
            case Left(_) =>
                Left("parse error")
    }

    protected def readFile(path: String): String = {
        Files.readString(Paths.get(path))
    }

    protected def path = s"plutus-conformance/test-cases/uplc/evaluation"

    private val BudgetRegex = """\(\{cpu:\s(\d+)\n\|\smem:\s(\d+)\}\)""".r

    protected def check(name: String): Unit =
        test(name) {
            val code = readFile(s"$path/$name.uplc")
            val expected = readFile(s"$path/$name.uplc.expected")
            val expectedBudget =
                val budget = Try(readFile(s"$path/$name.uplc.budget.expected"))
                budget match
                    case Success(BudgetRegex(cpu, mem)) =>
                        Right(ExBudget.fromCpuAndMemory(cpu.toLong, mem.toLong))
                    case Success("parse error") => Left("parse error")
                    case Success("evaluation failure") => Left("evaluation failure")
                    case Failure(_) => Left("no file")
                    case _ => fail(s"Unexpected budget format:\n$budget")
            
            // println(eval(code).show)
            (eval(code), parseExpected(expected), expectedBudget) match
                case (Right(Result.Success(actualTerm, budget, _, _)), Right(expectedTerm), expectedBudget) =>
                    assert(Term.alphaEq(actualTerm, expectedTerm), s"Expected $expectedTerm but got $actualTerm")
                    expectedBudget match
                        case Right(expectedBudget) =>
                            assert(budget == expectedBudget, s"Expected $expectedBudget but got $budget")
                        case Left("no file") => // ignore
                        case Left(e) => fail(s"Expected $e but got $budget")
                case (Right(Result.Failure(actualTerm, _, _, _)), Left("evaluation failure"), Left("evaluation failure")) =>
                    assert(true)
                case (Left(e1), Left(e2), Left(_)) => assert(e1 == e2)
                case (a, b, c)               => fail(s"Expected $b but got $a and budget $c")
        }