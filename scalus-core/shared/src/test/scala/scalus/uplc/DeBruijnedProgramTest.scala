package scalus.uplc

import org.scalacheck.Arbitrary
import org.scalatest.funsuite.AnyFunSuite
import scalus.serialization.cbor.Cbor
import scalus.*
import scalus.builtin.ByteString

class DeBruijnedProgramTest extends AnyFunSuite {
    private val flatEncoded = Compiler.compile(true).toUplc().plutusV3.flatEncoded

    test("fromCborWithRemainingBytes") {
        val suffix = Arbitrary.arbitrary[Array[Byte]].sample.get
        val cbor = Cbor.encode(flatEncoded ++ suffix)
        val result = DeBruijnedProgram.fromCborWithRemainingBytes(cbor)

        assert(result._2 sameElements suffix)
    }

    test("Constr.tag should be unsigned") {
        val bs = ByteString.fromHex(
          "590715010100332323232323232323232323232323232323232323232323232223259323255333573466e1d2" +
              "000001113232323232329005911919191919192a999ab9a3375e00a6ae84d55cf1baa33301800900e0061159" +
              "330213017004375200f1593301400800c8aa999ab9a3375e6ae84d5d11aab9e37540026ae84d5d100108aa99" +
              "9ab9a3375e602a002602a00822666ae68cdd7a6103d87a80003016001800400846004230028c009180104600" +
              "4660300106ae84004d55cf0009baa00133016006007357426aae78dd51aba1357446aae78dd519980b802804" +
              "8009ba9006180f804980e804180f8039bae357426aae78010cc0648c8c8c954ccd5cd19b8748000008460026" +
              "6036eb8d5d0800cdd71aba13574400211635573c0046aae74004dd5000802c801c8800822aa666ae68cdc3a4" +
              "0040022264646464646520072322323232593301f30150080038ac9980f0038064554ccd5cd19baf357426aa" +
              "e78dd50011aba135573c6ea80204554ccd5cd19baf30130020011155333573466ebd300103d87a8000301400" +
              "211333573466e1d20043301c3015002480020010021180108c0084600518012300219ba548010cd5d0180fc0" +
              "04c0100260064bd701980d8028009ba9001302522590018801c88600600530040010603e01266020603a0106" +
              "040010660364646464aa666ae68cdc3a400000423001300635742003375c6ae84d5d10008458d55cf0011aab" +
              "9d001375400200e60026ae84d55cf002180bbae30170031155333573466e1d20040011132323232323232900" +
              "3911919192c9980f980a803801c564cc0780180322aa666ae68cdd79aba135573c6ea8008d5d09aab9e37540" +
              "0e22aa666ae68cdd7980980100088aa999ab9a3375e98103d87a8000301400211333573466e1d20043301c30" +
              "15002480020010021180108c0084600518012300219ba548010cd5d0180fc004cc02001200100325eb80cc06" +
              "c010004dd48008c080028cc044c078024c084024cc0708c8c8c954ccd5cd19b874800000846002600e6ae840" +
              "066eb8d5d09aba200108b1aab9e00235573a0026ea8004020c0848896400a2003221593300e0060028998028" +
              "00801c4cc014006006005003060026ae84d55cf002180bbae30170031155333573466e1d2006001113232323" +
              "29003912c9980c98078021ba900189980c00180346004180e80399807180d803180f0031980c91919192a999" +
              "ab9a3370e900000108c004cc06dd71aba10019bae357426ae8800422c6aae78008d55ce8009baa0010053017" +
              "00311635573a0026ea8d5d09aba235573c6ea800a293458646464aa666ae68cdc3a400000423001357420033" +
              "57426ae8800422c6aae78008d55ce8009baa0023018222590028c00a442aa666ae68cdc780100188c00044cc" +
              "01400400c46ae84d5d11aba235573c6ea80048d5d09aba2357446ae88d55cf1baa001237566ae84d5d11aab9" +
              "e375400260284444aa666ae68d5d180188b08992a999ab9a3370e90011998051bab357426ae88d55cf1baa00" +
              "10030021100111333005357440080060046ae8400cc04c88954ccd5cd1aba3002116113255333573466ebcd5" +
              "d09aab9e37540020042200222660086ae8800c008d5d0801111aba1357446aae78dd51980180100098089112" +
              "a999ab9a3574600422c2264aa666ae68cdd79aba135573c6ea80040084400444cc010d5d10018011aba10023" +
              "01022225533357346ae8c00c45844c954ccd5cd19b8748008ccc018dd59aba1357446aae78dd51aba1357446" +
              "aae78dd500080180108800889998029aba200400300235742006444646602644aa666ae68d5d180088a40002" +
              "264aa666ae68cdd79aab9d00100611300437566aae7800444c00cd5d10011aba10010043012225533357346a" +
              "e8c004452000113255333573466ebcd55ce800802089bad35573c0022260066ae88008d5d080098071112a99" +
              "9ab9a357460042200222660066ae88008cdc024004002601a444aa666ae68d5d180108b08992c998031bab35" +
              "7426ae88d55cf1baa0010028800c4cc010d5d10018010d5d080118061112a999ab9a35746004230021159330" +
              "0437566ae84d5d11aab9e37546ae8400800630008998019aba200200118059112a999ab9a357460042300211" +
              "55333573466ebcd55ce9aba10020011180008998019aba2002001290019119ba548000cd5d01ba7300400233" +
              "57406ea40052f5c03009229001a5eb824466ae80dd4801180200088c88c008dd60009804911999aab9f00128" +
              "001400cc010d5d08014c00cd5d1001200052003220011118011aba135573c6ea8d5d09aba235573c6ea8c01c" +
              "0048dd61aba13003001237586ae84d5d11aba23002001235573c6ea8d5d09aab9e375400246ae84d55cf1baa" +
              "30020012357426ae88d5d11aab9e3754002464600200246004466004004002980140d8799f581ce760308d0c" +
              "14096ff479ec5f2495455505feb790503903fe976c4fd2581c16c5b8eaf75a95d04cfdaa20d4a227835ec9c5" +
              "2db75ff0df12806a5fff0001"
        )
        val p = DeBruijnedProgram.fromCbor(bs.bytes)
        // println(p.showHighlighted)
        assert(!p.toString.contains("Constr(-1, )"))
    }

}
